name: CI/CD pipeline to build/test and deploy employee-service on AWS EC2

on:
  push:
    branches: [ "master" ]

jobs:
  compile:
    name: compile the project
    runs-on: ubuntu-latest
    steps:
      - name: checkout the master
        uses: actions/checkout@v5
      - name: Setup JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: build with Maven
        run: ./mvnw clean compile

  run_test:
    name: running the unit test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: test_emp
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        volumes:
          - postgres_dev:/var/lib/postgresql/data
        ports:
          - 5432:5432
    steps:
      - name: checkout the master
        uses: actions/checkout@v5
      - name: Setup JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: running the unit test
        run: ./mvnw clean test
  
  build:
    name: build the package
    needs: [ run_test, compile ]
    runs-on: ubuntu-latest
    steps:
      - name: checkout the master
        uses: actions/checkout@v5
      - name: Setup JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: build with Maven
        run: ./mvnw clean package
  
  prepare_image:
    name: build the docker image, and push it to the Docker Hub
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: checkout the master
        uses: actions/checkout@v5
      - name: Setup JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: login to the docker hub
        uses: docker/login-action@v5
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: build and push the image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          image: ${{ secrets.DOCKER_USERNAME }}/employee-service
          tags: 1.4,latest
          platforms: linux/amd64
          registry: docker.io
          push: true
  deploy:
    needs: prepare_image
    runs-on: [ self-hosted ]
    steps:
      - name: pull image from docker hub
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/employee-service:latest
      - name: delete the old container
        run: docker rm -f employee-service
      - name: run the docker container
        run: docker run -d -e ACTIVE_PROFILE=prod -p 2222:2222 --name employee-service ${{ secrets.DOCKER_USERNAME }}/employee-service:latest